name: Publish new release
on:
  push:
    branches:
      - master
  paths:
    - 'src/**'
jobs:
  #  prepare-paths:
  #    runs-on: ubuntu-latest
  #    outputs:
  #      plugins: ${{ steps.filter.outputs.plugins }}
  #      docs: ${{ steps.filter.outputs.docs }}
  #    steps:
  #      - uses: dorny/paths-filter@v2
  #        id: filter
  #        with:
  #          filters: |
  #            plugins:
  #              - 'src/**'
  #            docs:
  #              - 'docs/**'
  #  Build-Documentation:
  #    runs-on: ubuntu-latest
  #    steps:
  #      - name: Setup node
  #        uses: actions/setup-node@v3
  #        with:
  #          node-version: 16
  #      - name: Build
  #        run: npm run build
  #      - name: Setup Pages
  #        uses: actions/configure-pages@v1
  #      - name: Upload artifact
  #        uses: actions/upload-pages-artifact@v1
  #        with:
  #          path: build
  #      - name: Deploy to GitHub Pages
  #        id: deployment
  #        uses: actions/deploy-pages@v1
  Build-Java-8:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '8'
      - run: gradle :shadowJar -b java8-build.gradle
      - uses: actions/upload-artifact@v2
        with:
          path: build/libs/commandtimer-java8.jar
  Build-Java-17:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'
      - run: gradle :shadowJar
      - uses: actions/upload-artifact@v2
        with:
          path: build/libs/commandtimer-java17.jar
  Release:
    needs:
      - Build-Java-8
      - Build-Java-17
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
      - run: echo "PLUGIN_VERSION=$(./scripts/get-version.sh)" >> $GITHUB_ENV
      - run: gh release create ${{ env.PLUGIN_VERSION }} -t ${{ env.PLUGIN_VERSION }} artifact/*.jar
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
